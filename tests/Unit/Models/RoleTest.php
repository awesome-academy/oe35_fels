<?php

namespace Tests\Unit\Models;

use App\Models\Role;
use App\Models\User;
use Illuminate\Database\Eloquent\Collection;
use Illuminate\Foundation\Testing\RefreshDatabase;
use Illuminate\Foundation\Testing\WithFaker;
use Illuminate\Support\Facades\Schema;
use Tests\TestCase;

class RoleTest extends TestCase
{
    use RefreshDatabase, WithFaker;

    protected $role;
    protected $user;

    protected function setUp(): void
    {
        parent::setUp(); // TODO: Change the autogenerated stub

        $this->role = factory(Role::class)->create();
        $this->user = factory(User::class)->create([
            'role_id' => $this->role->id,
        ]);
    }

    /**
     * Test table has columns.
     *
     * @return void
     */
    public function test_roles_table_has_expected_columns()
    {
        $this->assertTrue(
            Schema::hasColumns('roles', [
                'id',
                'name',
            ]),
            1
        );
    }

    /**
     * Test Role mass assignment properties.
     *
     * @return void
     */
    public function test_contains_valid_fillable_properties()
    {
        $this->assertEquals([
            'name',
        ], $this->role->getFillable());
    }

    public function test_role_has_many_users()
    {
        $role = $this->role;
        $user = $this->user;

        $this->assertTrue($role->users->contains($user));
        $this->assertInstanceOf(Collection::class, $role->users);
    }
}
