<?php

namespace Tests\Unit\Models;

use App\Models\Profile;
use App\Models\Role;
use App\Models\User;
use Illuminate\Database\Eloquent\Collection;
use Illuminate\Foundation\Testing\RefreshDatabase;
use Illuminate\Foundation\Testing\WithFaker;
use Illuminate\Support\Facades\Schema;
use Tests\TestCase;

class ProfileTest extends TestCase
{
    use RefreshDatabase, WithFaker;

    protected $profile;

    protected function setUp(): void
    {
        parent::setUp(); // TODO: Change the autogenerated stub

        $role = factory(Role::class)->create();
        $user = factory(User::class)->create([
            'role_id' => $role->id,
        ]);
        $this->profile = factory(Profile::class)->create([
            'user_id' => $user->id,
        ]);
    }

    /**
     * Test table has columns.
     *
     * @return void
     */
    public function test_profiles_table_has_expected_columns()
    {
        $this->assertTrue(
            Schema::hasColumns('profiles', [
                'id',
                'user_id',
                'name',
                'avatar',
                'gender',
            ]),
            1
        );
    }

    /**
     * Test Profile mass assignment properties.
     *
     * @return void
     */
    public function test_contains_valid_fillable_properties()
    {
        $this->assertEquals([
            'name',
            'avatar',
            'gender',
            'user_id',
        ], $this->profile->getFillable());
    }

    public function test_profile_belongs_to_user()
    {
        $profile = $this->profile;

        $this->assertEquals(1, $profile->user->count());
        $this->assertInstanceOf(User::class, $profile->user);
    }
}
